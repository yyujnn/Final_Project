<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ht.project.mapper.HtMapper">

	<!-- 사용자 -->
	<select id="login" resultType="ht.project.entity.User" 
	parameterType="ht.project.entity.User">
		select * from t_user where user_id = #{user_id} and user_pw = #{user_pw}
	</select>
	
	<update id="access" parameterType="ht.project.entity.User">
      update t_user set user_accdate = now() where user_id = #{user_id}
   </update>
	
	<insert id="join" parameterType="ht.project.entity.User">
      insert into t_user(user_id, user_pw, user_name, user_age, user_gender)
      values(#{user_id}, #{user_pw}, #{user_name}, #{user_age}, #{user_gender})
   </insert>
	

	<!-- getUserInfo 매퍼 -->
	<select id="getUserInfo" resultType="ht.project.entity.User"
	parameterType="ht.project.entity.User">
	    SELECT * FROM t_user WHERE user_id = #{user_id}
	</select>
	
	<!-- getCommunityList 매퍼 -->
	<select id="getCommunityList" resultType="ht.project.entity.Community">
	    SELECT * FROM t_community
	</select>
	
 	<!-- updateLikes 구문 작성 -->
    <update id="updateLikes" parameterType="ht.project.entity.Community">
        UPDATE t_community SET likes = #{param2} WHERE p_num = #{param1}
    </update>
    

	<!-- 좋아요 추가 -->
	<insert id="insertLike" parameterType="ht.project.entity.Likes">
	    INSERT INTO t_likes (p_num, user_id)
	    VALUES (#{p_num}, #{user_id})
	</insert>

	<!-- 좋아요 삭제 -->
	<delete id="deleteLike" parameterType="ht.project.entity.Likes">
	    DELETE FROM t_likes
	    WHERE p_num = #{p_num}
	    AND user_id = #{user_id}
	</delete>
	
	<select id="likeStatus" parameterType="ht.project.entity.Likes" resultType="ht.project.entity.Likes">
		SELECT * FROM t_likes WHERE user_id = #{user_id} 
	</select>

	 <!-- 댓글 등록 -->
   <insert id="commentReg" parameterType="ht.project.entity.Comment">
      insert into t_comment (content, p_num, user_id)
      values(#{content}, #{p_num}, #{user_id})
   </insert>
   <!-- 해야할것: user_id 연결 -->

   <!-- 해당 게시글의 댓글 조회 + user_name 붙여서 보내기-->
   <select id="commentShow" parameterType="ht.project.entity.Comment" resultType="ht.project.entity.Comment">
      select c.*, u.user_name
      from t_comment c
      join t_user u ON c.user_id = u.user_id
      where c.p_num = #{p_num};
   </select>
   
   <!-- 전체게시글의 댓글조회 + user_name  -->
   <select id="initialComm" parameterType="ht.project.entity.Comment" resultType="ht.project.entity.Comment">
      select c.*, u.user_name
      from t_comment c
      join t_user u ON c.user_id = u.user_id
      
   </select>
   
   <!-- 가장 최근 Health 데이터 -->
   <select id="getLatestHealt" parameterType="ht.project.entity.Health"
   resultType="ht.project.entity.Health">
   		SELECT * FROM t_health
   		<where>
   			user_id = #{user_id}
   		</where>
        ORDER BY input_date DESC
        LIMIT 1;
   </select>
   
   <!-- 혈압 등록 -->
   <insert id="bpRegister" parameterType="ht.project.entity.Health">
   		INSERT INTO t_health (user_id, bp_high, bp_low)
        VALUES (#{user_id}, #{bp_high}, #{bp_low})
   </insert>
   
   <!-- 혈당 등록 -->
   <insert id="bsRegister" parameterType="ht.project.entity.Health">
   		INSERT INTO t_health (user_id, bs_emp, bs_ful)
        VALUES (#{user_id}, #{bs_emp}, #{bs_ful})
   </insert>
   
   <!-- 가장 최근 ecg 데이터 -->
   <select id="getLatestEcg" parameterType="ht.project.entity.Ecg" resultType="ht.project.entity.Ecg">
	    SELECT *,
	           CASE results
	                WHEN 'sr' THEN '정상 동리듬'
	                WHEN 'af' THEN '심방세동'
	                WHEN 'sb' THEN '동성서맥'
	                WHEN 'gsvt' THEN '판독불가'
	                ELSE '결과없음'
	           END AS resultsText
	    FROM t_ecg
	    WHERE user_id = #{user_id}
	    ORDER BY input_date DESC
	    LIMIT 1;
	</select>

	<!-- 가장 최근 bp 데이터 -->
	<select id="getLatestBp" parameterType="ht.project.entity.Health"
    resultType="ht.project.entity.Health">
	    SELECT *
	    FROM t_health
	    WHERE user_id = #{user_id} AND bs_emp = 0
	    ORDER BY input_date DESC
	    LIMIT 1;
	</select>
	
	<!-- 가장 최근 bs 데이터 -->
	<select id="getLatestBs" parameterType="ht.project.entity.Health"
    resultType="ht.project.entity.Health">
	    SELECT *
	    FROM t_health
	    WHERE user_id = #{user_id} AND bp_low = 0
	    ORDER BY input_date DESC
	    LIMIT 1;
	</select>
	
	<!-- MyHealthList -->
	<select id="getMyBpList"  parameterType="ht.project.entity.Health"
    resultType="ht.project.entity.Health">
    	select * from t_health where user_id =#{user_id} and bs_emp=0
    	ORDER BY input_date DESC;
    </select>
	<select id="getMyBsList"  parameterType="ht.project.entity.Health"
    resultType="ht.project.entity.Health">
    	select * from t_health where user_id =#{user_id} and bp_high=0
    	ORDER BY input_date DESC;
    </select>
    <select id="getMyEcgList" parameterType="ht.project.entity.Ecg" 
    resultType="ht.project.entity.Ecg">
    	select * ,
    			CASE results
	                WHEN 'sr' THEN '정상 동리듬'
	                WHEN 'af' THEN '심방세동'
	                WHEN 'sb' THEN '동성서맥'
	                WHEN 'gsvt' THEN '판독불가'
	                ELSE '결과없음'
	           END AS resultsText
    	from t_ecg where user_id = #{user_id}
    	ORDER BY input_date DESC;
    </select>
    
    <!-- 관리자페이지에서 불러올 유저 목록 -->
	<select id="getUserList" resultType="ht.project.entity.Admin">
		SELECT
		  t_user.*,
		  IFNULL(ecg_count, 0) AS ecg_cnt,
		  IFNULL(comm_count, 0) AS comm_cnt
		FROM
		  t_user
		LEFT JOIN (
		  SELECT user_id, COUNT(*) AS ecg_count
		  FROM t_ecg
		  GROUP BY user_id
		) AS ecg ON t_user.user_id = ecg.user_id
		LEFT JOIN (
		  SELECT user_id, COUNT(*) AS comm_count
		  FROM t_community
		  GROUP BY user_id
		) AS comm ON t_user.user_id = comm.user_id
	</select>

	<!-- 관리자페이지에서 Ecg 그래프 데이터 -->
	<select id="getEcgList" resultType="ht.project.entity.Admin">
		SELECT
			e.use_count AS useAll,
			e.user_count AS useUser,
			ROUND((e.use_count / u.total_user_count),2) AS useAvg
		FROM
		(SELECT COUNT(*) AS use_count, COUNT(DISTINCT user_id) AS user_count 
		 FROM t_ecg) AS e,
		(SELECT COUNT(*) AS total_user_count 
		 FROM t_user) AS u
	</select>

	<!-- 차트에 넣어줄 데이터 -->
	<select id="getRes" resultType="ht.project.entity.Admin">
		SELECT results,count(*) as resCnt
		FROM t_ecg GROUP BY results
	</select>
	
		<!-- <> 이렇게 넣어주면 오류나서 이스케이프코드 &lt;&gt;로 <> 써줌 -->
	<select id="getHealth" resultType="ht.project.entity.Admin">
		SELECT
		DATE(input_date) AS
		input_date,
		COUNT(CASE WHEN bp_high &lt;&gt; 0 THEN 1 END) AS bp_cnt,
		COUNT(CASE WHEN bs_emp &lt;&gt; 0 THEN 1 END) AS bs_cnt
		FROM t_health
		GROUP BY DATE(input_date)
		ORDER BY DATE(input_date)
	</select>

	<!-- 분석에 걸린 시간 가져오는 쿼리문 -->
	<select id="getDeep" resultType="ht.project.entity.Admin">
		SELECT
			DATE(input_date) AS input_date,
			ROUND(MIN(infer_time), 3) AS min_time,
			ROUND(MAX(infer_time), 3) AS max_time,
			ROUND(AVG(infer_time), 3) AS avg_time
		FROM t_ecg
		GROUP BY DATE(input_date)
	</select>
	
	<!-- community 등록하기 -->
	<insert id="insertCommunity" parameterType="ht.project.entity.Community">
	  INSERT INTO t_community (user_id, content, ecg_num, h_num)
	  VALUES (
	    #{user_id},
	    #{content},
	    <if test="ecg_num != null and ecg_num != 0">
	      #{ecg_num}
	    </if>
	    <if test="ecg_num == null or ecg_num == 0">
	      NULL
	    </if>,
	    <if test="h_num != null and h_num != 0">
	      #{h_num}
	    </if>
	    <if test="h_num == null or h_num == 0">
	      NULL
	    </if>
	  )
	</insert>
	
	<select id="getEcgInfo" parameterType="int" resultType="ht.project.entity.Ecg">
		SELECT *,
			CASE results
	                WHEN 'sr' THEN '정상 동리듬'
	                WHEN 'af' THEN '심방세동'
	                WHEN 'sb' THEN '동성서맥'
	                WHEN 'gsvt' THEN '판독불가'
	                ELSE '결과없음'
	           END AS resultsText
		FROM t_ecg WHERE ecg_num = #{ecg_num}
		
		
	</select>
	
	<select id="getHealthInfo"  parameterType="int" resultType="ht.project.entity.Health">
		SELECT * FROM t_health WHERE h_num = #{h_num}
	</select>

	<select id="getEcgDetails" parameterType="ht.project.entity.Ecg" 
    resultType="ht.project.entity.Ecg">
    	select * ,
    			CASE results
	                WHEN 'sr' THEN '정상 동리듬'
	                WHEN 'af' THEN '심방세동'
	                WHEN 'sb' THEN '동성서맥'
	                WHEN 'gsvt' THEN '판독불가'
	                ELSE '결과없음'
	           END AS resultsText
    	from t_ecg where ecg_num = #{ecgNum}
    </select>
    
    <!-- getCommunityList 매퍼 -->
	<select id="getchoose" resultType="ht.project.entity.Community">
	    SELECT * FROM t_community WHERE category = '공지'
	</select>
	
	<select id="findByUsername" parameterType="String" resultType="ht.project.entity.User">
	 	SELECT user_id
        FROM t_user
        WHERE user_id = #{user_id}
	</select>
	
	<!-- getCommunityList 매퍼 -->
	<select id="getbase" resultType="ht.project.entity.Community">
	    SELECT * FROM t_community WHERE category = '일반'
	</select>
    
</mapper>